Working with projects
#####################

In every project in which you want to use the Compass, you need to have configuration file, that says to the compiler where to look for files, where to save the output and some other options important for work. For all that there is command line tool called simply `compass`. I'm not going through all it's options, only the primary. If you want to see all options use option for help. In case that you need something, that it's not written in following text, I recommend the `Compass Tutorials <http://compass-style.org/help/tutorials/>`_, where are covered even more advance topics.

.. code-block:: bash
	
	compass -h

Now if you have some time try to look at the list of all options that compass has. I'm going to explain the primary ones and what they do.

create
************

The most important is to create new Compass project. It's done with the option `create`. After the option follows the name of the project.

.. code-block:: bash

	compass create HelloWorld

The start of its output will be following

.. code-block:: bash

	directory HelloWorld/ 
	directory HelloWorld/sass/ 
	directory HelloWorld/stylesheets/ 
	create HelloWorld/config.rb 
	create HelloWorld/sass/screen.scss 
	create HelloWorld/sass/print.scss 
	create HelloWorld/sass/ie.scss 
	create HelloWorld/stylesheets/print.css 
	create HelloWorld/stylesheets/screen.css 
	create HelloWorld/stylesheets/ie.css 

It creates the folder HelloWorld with `config.rb`, in that is stored the settings that will be used by the compass compiler, and two folders one for yours Sass code - `sass` and one for generated css called `stylesheets`. It even creates three `.scss` files for your styles and compile them to their CSS versions. At the end of the output is how to include the styles to your HTML or some similar document, where you need the styles, but this you should know. 

The names of the files don't need to be equal to the version generated by compass. Only the `config.rb` file name needs to stay without change. It stores the settings for the compiler where to look for the sass files and where save the output. It even sets where are saved images that you use and your javascript if you have any. 

Content of the `config.rb`::

	# Require any additional compass plugins here.

	# Set this to the root of your project when deployed:
	http_path = "/"
	css_dir = "stylesheets"
	sass_dir = "sass"
	images_dir = "images"
	javascripts_dir = "javascripts"

	# You can select your preferred output style here (can be overridden via the command line):
	# output_style = :expanded or :nested or :compact or :compressed

	# To enable relative paths to assets via compass helper functions. Uncomment:
	# relative_assets = true

	# To disable debugging comments that display the original location of your selectors. Uncomment:
	# line_comments = false


	# If you prefer the indented syntax, you might want to regenerate this
	# project again passing --syntax sass, or you can uncomment this:
	# preferred_syntax = :sass
	# and then run:
	# sass-convert -R --from scss --to sass sass scss && rm -rf sass && mv scss sass

There are comments that explain a lot of things, if you are not sure what does some option mean. You are probably not going to change a lot of the code in here. Only at the time of deployment of the project is nice to uncomment the `line_comments` (just delete the hash sign `#`) and set the `output_style` to `:compressed`. This way will compass generate for you the smallest version of your style.

init
************

If you had started some project and later you figure out that you need to use Compass, than comes the `init` option handy. It create all important files for compass in the directory where is your project. Enter the folder with your project. For example, it's called `web_app` and run following command.

.. code-block:: bash

	compass init

After that you are done. It created `config.rb` and the folders for the sass styles and generated CSS. You can say that you can create it on your own, while it's just one configuration file and few folders. But `init` makes it for you.

compile
************

Probably the most important option. It looks at the configuration file and base on the settings it generates CSS from your Sass. 

.. code-block:: bash

	compass compile [/path/to/project]

If you are in the same directory as is the `config.rb` file, than the path won't be there. The path to project is important if you in other directory as the configuration file.

watch
************

This option will be used most of the time. It does the same thing as the `compile` with one feature at the top. It waits for changes of your sass code and if there are any, `watch` will compile your code automatically.

.. code-block:: bash

	compass watch [/path/to/project]

Again the path is important only in case that you are not in the same directory as is the `config.rb` file.